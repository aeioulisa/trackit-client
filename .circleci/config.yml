version: 2
jobs:
  test:
    working_directory: ~/trackit2-client
    docker:
      - image: msolution/trackit2-builder-ui
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Installing NPM dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Linting
          command: npm run lint
      - run:
          name: Testing
          command: npm run test
  deploy_prod:
    working_directory: ~/trackit2-client
    docker:
      - image: msolution/trackit2-builder-ui
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Installing NPM dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          environment:
            CI: 'false'
          name: Building
          command: npm run build
      - deploy:
          name: Deploying
          command: aws s3 sync --delete build/ $S3_DEPLOYMENT_DESTINATION
  deploy_stg:
    working_directory: ~/trackit2-client
    docker:
      - image: msolution/trackit2-builder-ui
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Installing NPM dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          environment:
            CI: 'false'
          name: Building
          command: API_URL=$API_URL_STG npm run build
      - deploy:
          name: Deploying
          command: aws s3 sync --delete build/ $S3_DEPLOYMENT_DESTINATION_STG
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test
      - deploy_prod:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy_stg:
          requires:
            - test
          filters:
            branches:
              only:
                - staging
